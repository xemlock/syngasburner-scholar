<?php

/**
 * @version 2012-07-29
 */

/**
 * @file
 * The Zend module for Drupal ensures that the Zend Framework is installed.
 */

/**
 * Implementation of hook_init().
 */
function zend_init() {
  // Due to the dependance on the libraries module being included, we wait until
  // hook_init() to register the Zend Loader.
  if ($path = zend_get_path()) {
    // add Zend Framework to include path
    set_include_path(get_include_path() . PATH_SEPARATOR . dirname($path));
    require_once $path .'/Loader/Autoloader.php';
    Zend_Loader_Autoloader::getInstance();
  }
}

/**
 * Retrieve the expected path to the Zend Framework.
 *
 * @return
 *   The path where the Zend Framework is to be expected to be installed.
 */
function zend_get_path() {
  // A path can be configured to the location of the library.
  $path = variable_get('zend_path', FALSE);

  if (!$path) {
    // Check if the libraries module is installed and if the Zend Framework is
    // being supplied through the libraries module.
    if (module_exists('libraries')) {
      $libraries = libraries_get_libraries();
      if (isset($libraries['Zend'])) {
        $path = libraries_get_path('Zend');
      }
    }

    // Check if the Zend Framework is in the include path.
    if (!$path) {
      $include_paths = explode(PATH_SEPARATOR, get_include_path());
        foreach ($include_paths as $include_path) {
          if (is_dir($include_path .'/Zend')) {
            $path = $include_path .'/Zend';
            break;
          }
        }
    }
  }

  return $path;
}

/**
 * Implementation of hook_menu().
 */
function zend_menu()
{
  $items = array();
  $items['admin/settings/zend'] = array(
    'title' => 'Zend Framework',
    'description' => t('Configure Zend Framework binding for Drupal 6'),
    'access arguments' => array('administer zend'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('zend_admin_form'), 
    'parent' => 'admin/settings',
  );
  return $items;
}

function zend_admin_form() {
  $form = array();
  
  $form['zend_path'] = array(
    '#title' => t('Path to Zend Framework root directory'),
    '#type' => 'textfield',
    '#required' => true,
    '#default_value' => variable_get('zend_path', false),
    '#description' => t('Either an absolute path or a path relative to the index.php file of Drupal installation.'),
  );
  $form['op'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );
  $form['#validate'][] = 'zend_admin_form_validate';
  $form['#submit'][] = 'zend_admin_form_submit';
  return $form;
}

function zend_admin_form_validate($form_id, &$form_state) {
  $path = strval($form_state['values']['zend_path']);

  // normalize directory separator, trim trailing slashes
  $path = rtrim(str_replace('\\', '/', $path), '/');

  if (empty($path) || !is_dir($path)) {
    form_set_error('zend_path', t('Invalid path specified'));
    return false;
  }

  $found = false;

  if (is_file($path . '/Version.php')) {
    if (!class_exists('Zend_Version', false)) {
        require_once $path . '/Version.php';
    }
    $found = class_exists('Zend_Version', false);
  }

  if (!$found) {
    form_set_error('zend_path', t('Zend Framework not found in given path'));
    return false;
  }

  $form_state['values']['zend_path'] = $path;

  return true;
}

function zend_admin_form_submit($form, &$form_state)
{
    variable_set('zend_path', $form_state['values']['zend_path']);
    drupal_set_message(t('Path to Zend Framework set successfully'));
    drupal_goto('admin/settings/zend');
}
